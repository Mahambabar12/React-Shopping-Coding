{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer, productDetailsReducer } from \"./reducers/productReducer\";\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from \"./reducers/userReducers\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from \"./reducers/orderReducer\";\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\nconst initialState = {\n  // cart: { cartItems: \"techinfo\" },\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","cartReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","shippingAddressFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","cartItemsFromStorage","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","orderListMy","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"sources":["C:/shopping-app/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productListReducer,\n  productDetailsReducer,\n} from \"./reducers/productReducer\";\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n} from \"./reducers/userReducers\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderListMyReducer,\n} from \"./reducers/orderReducer\";\n\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n});\nconst initialState = {\n  // cart: { cartItems: \"techinfo\" },\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\nconst middleware = [thunk];\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SACEC,kBAAkB,EAClBC,qBAAqB,QAChB,2BAA2B;AAClC,SACEC,gBAAgB,EAChBC,mBAAmB,EACnBC,kBAAkB,EAClBC,wBAAwB,QACnB,yBAAyB;AAChC,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SACEC,kBAAkB,EAClBC,mBAAmB,EACnBC,eAAe,EACfC,kBAAkB,QACb,yBAAyB;AAEhC,MAAMC,0BAA0B,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GACtEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GACnD,CAAC,CAAC;AAEN,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAC5C,IAAI;AAER,MAAMI,oBAAoB,GAAGL,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC1DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAC7C,EAAE;AAEN,MAAMK,OAAO,GAAGtB,eAAe,CAAC;EAC9BuB,WAAW,EAAEnB,kBAAkB;EAC/BoB,cAAc,EAAEnB,qBAAqB;EACrCoB,IAAI,EAAEf,WAAW;EACjBgB,SAAS,EAAEpB,gBAAgB;EAC3BqB,YAAY,EAAEpB,mBAAmB;EACjCqB,WAAW,EAAEpB,kBAAkB;EAC/BqB,iBAAiB,EAAEpB,wBAAwB;EAC3CqB,WAAW,EAAEnB,kBAAkB;EAC/BoB,YAAY,EAAEnB,mBAAmB;EACjCoB,QAAQ,EAAEnB,eAAe;EACzBoB,WAAW,EAAEnB;AACf,CAAC,CAAC;AACF,MAAMoB,YAAY,GAAG;EACnB;EACAT,IAAI,EAAE;IACJU,SAAS,EAAEd,oBAAoB;IAC/Be,eAAe,EAAErB;EACnB,CAAC;EACDW,SAAS,EAAE;IAAEW,QAAQ,EAAEjB;EAAoB;AAC7C,CAAC;AACD,MAAMkB,UAAU,GAAG,CAACpC,KAAK,CAAC;AAC1B,MAAMqC,KAAK,GAAGxC,WAAW,CACvBuB,OAAO,EACPY,YAAY,EACZ/B,mBAAmB,CAACF,eAAe,CAAC,GAAGqC,UAAU,CAAC,CAAC,CACpD;AAED,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}